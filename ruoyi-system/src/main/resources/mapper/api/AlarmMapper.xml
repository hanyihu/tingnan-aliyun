<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.api.mapper.AlarmMapper">


    <sql id="VLiveVo">
       TagName as tagName,
       TagType as tagType,
       DataType as dataType,
       Unit as unit,
       SystemType as systemType,
       RangMin as rangMin,
       RangMax as rangMax,
       LowAlarm as lowAlarm,
       AlarmStatus as alarmStatus,
       TagKey as tagKey,
       VALUE as value,
       TIMESTAMP as timestamp,
       SendSms as sendSms,
       DealAlarm as dealAlarm,
       DigCount as digCount,
       ValueType as valueType
    </sql>

    <sql id="VAlarmhisVo">
       TagName as tagName,
       TagType as tagType,
       TagDesc as tagDesc,
       DataType as dataType,
       Unit as unit,
       SystemType as systemType,
       RangMin as rangMin,
       RangMax as rangMax,
       LowAlarm as lowAlarm,
       TagKey as tagKey,
       StartValue as startValue,
       AvgValue as avgValue,
       EndValue as endValue,
       MAXVALUE as maxValue,
       Duration as duration,
       StartTime as startTime,
       EndTime as endTime,
       CreateTime as createTime,
       ID as id
    </sql>

    <sql id="VAlarmRealVo">
       ID as id,
       TagKey as tagKey,
       LowAlarm as lowAlarm,
       StartValue as startValue,
       EndValue as endValue,
       AvgValue as avgValue,
       MaxValue as maxValue,
       Duration as duration,
       StartTime as startTime,
       EndTime as endTime,
       TagName as tagName,
       TagDesc as tagDesc,
       TagType as tagType,
       DataType as dataType,
       Unit as unit,
       SystemType as systemType,
       RangMin as rangMin,
       RangMax as rangMax

    </sql>

    <sql id="InfoEventVo">
		id_ as id ,
		time_ as times ,
		systype as systype ,
		tagname as tagname ,
		tagkey as tagkey ,
		Device as device ,
		SubDevice as subDevice ,
		addr_ as addr ,
		val_ as val ,
		info_ as info,
		event_ as event ,
		class_ as classs ,
		user_ as users ,
		res_ as res ,
		varinfo_ as varinfo ,
		confirm_ as confirm ,
		cuser_ as cuser ,
		ctime_ as ctime

	</sql>

    <sql id="VTagInfoAlarm">
       TagKey as tagKey,
       TagName as tagName,
       SystemType as systemType,
       value as value,
       timestamp as timestamps,
       TagStatus as tagStatus
    </sql>

    <sql id="FeedBack">
        id as id,
        user_id as userId,
        title as title,
        content as content,
        user_name as userName,
        images as images,
        create_time as createTime
    </sql>


    <resultMap id="FeedBackResult" type="com.ruoyi.system.domain.Feedback">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createTime" column="create_time"/>
        <result property="userName" column="user_name"/>
        <result property="images" column="images"/>
    </resultMap>

    <!--更新阿里云info_event_count告警数量-->
    <update id="updateInfoEventCount">
        update info_event_count set counts = #{newCount} where 1 = 1

    </update>

    <select id="getRealData" resultType="com.ruoyi.system.domain.VLive">
     select
      <include refid="VLiveVo"></include>
        from V_Live

    <where>
    <if test="systemType != null and systemType != ''">
            AND SystemType = #{systemType}
        </if>
    </where>


    </select>

    <!--告警统计-->
    <select id="getAlarmCountByDay" resultType="map">

        select datepart(dd,time_) [Day],count(id_) [counts] from info_event  where   convert(varchar(7),time_,120) = #{startTime}
        group by datepart(dd,time_)


    </select>

    <!--日期查询历史告警-->
    <select id="getAlarmHis" resultType="com.ruoyi.system.domain.InfoEvent">
        select
        <include refid="InfoEventVo"></include>
        from info_event

        <where>
            event_ = 1
            <if test="startTime != null and startTime != ''">
                and Convert(varchar(10),[time_],120) = Convert(varchar(10),#{startTime},120)
            </if>

        </where>

        order by time_ desc

    </select>

    <!--全部历史告警-->
    <select id="getAlarmHis1" resultType="com.ruoyi.system.domain.InfoEvent">
        select
        <include refid="InfoEventVo"></include>
        from info_event
        where event_ = 1
        and DATEDIFF(day,time_,GETDATE()) > 0

        order by time_ desc

    </select>


    <!--历史告警-数据曲线-历史数据-->
    <select id="getAlarmInfo" resultType="com.ruoyi.system.domain.VAlarmhis">
        select
        <include refid="VAlarmhisVo"></include>
        from V_AlarmHis
        <where>
            <if test="id != null and id != ''">
                AND ID = #{id}
            </if>
        </where>

    </select>

    <!--历史告警-数据曲线-实时数据-->
    <select id="getAlarmReal" resultType="com.ruoyi.system.domain.InfoEvent">

        select
        <include refid="InfoEventVo"></include>
        from info_event
        <where>
            <if test="id != null and id != ''">
                AND id_ = #{id}
            </if>
        </where>
    </select>

    <!--告警数据InfoEvent-->
    <select id="getTagInfoAlarm" resultType="com.ruoyi.system.domain.VTagInfoAlarm">
        select
        <include refid="VTagInfoAlarm"/>
        from V_TagInfoAlarm

        order by timestamp desc
    </select>

    <select id="getInfoEventCount" resultType="java.lang.Integer">
        select counts from info_event_count
    </select>

    <!--信息反馈-->
    <select id="getFeedBack" resultType="com.ruoyi.system.domain.Feedback">
        select
        <include refid="FeedBack"></include>
        from feedback
        order by create_time desc
    </select>

    <!--根信息反馈id查找信息祥情-->
    <select id="getFeedBackById" resultType="com.ruoyi.system.domain.Feedback">
        select
        <include refid="FeedBack"/>
        from feedback
        where id = #{id}
    </select>

    <!--后台管理系统查询feedback信息-->
    <select id="getFeedBackList" parameterType="com.ruoyi.system.domain.Feedback" resultMap="FeedBackResult">

        select id, user_id, title, content, create_time , user_name , images
        from feedback

        where 1=1
        <if test="title != null and title != ''">
            AND title like '%'+#{title}+ '%'
        </if>
        <if test="userName != null and userName != ''">
            AND user_name like '%'+#{userName}+ '%'
        </if>

        <!--<if test="params.beginTime != null and params.beginTime != ''">&lt;!&ndash; 开始时间检索 &ndash;&gt;
            AND datediff(dd,#{params.beginTime},create_time)>=0
        </if>-->


    </select>

    <insert id="insertFeedBack" parameterType="com.ruoyi.system.domain.Feedback" useGeneratedKeys="true"
            keyProperty="id">
        insert into feedback(

        <if test="userId != null and userId != 0">user_id,</if>
        <if test="userName != null and userName != ''">user_name,</if>
        <if test="title != null and title != ''">title,</if>
        <if test="content != null and content != ''">content,</if>
        <if test="images != null and images != ''">images,</if>
        create_time
        )values(
        <if test="userId != null and userId != ''">#{userId},</if>

        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="title != null and title != ''">#{title},</if>
        <if test="content != null and content != ''">#{content},</if>
        <if test="images != null and images != ''">#{images},</if>

        GETDATE()
        )
    </insert>

    <!--批量删除反馈信息-->
    <delete id="deleteFeedBackByIds" parameterType="Long">
        delete feedback where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>